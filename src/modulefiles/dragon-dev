#%Module
#
#
# Module Dragon
#

setenv DRAGON_VERSION 0.10
setenv DRAGON_BASE_DIR [file dirname [ file dirname $ModulesCurrentModulefile ] ]

if { [ is-loaded PrgEnv-cray ] } {
    module swap PrgEnv-cray PrgEnv-gnu
}
if { [ is-loaded PrgEnv-intel ] } {
    module swap PrgEnv-intel PrgEnv-gnu
}
if { ! [ is-loaded PrgEnv-gnu ] && [ module avail PrgEnv-gnu ] != "" } {
    puts stderr "+------------------------------------------+"
    puts stderr "Auto-loading PrgEnv-gnu and craype-x86-rome"
    puts stderr "+------------------------------------------+"
    module load PrgEnv-gnu
    module load craype-x86-rome
}
# it's possible (e.g. on pinoak) to load PrgEnv-gnu but not get the gcc module
if { ! [ is-loaded gcc ] && [ module avail gcc ] != "" } {
    module load gcc
}
if { ! [ is-loaded cray-python ] && [ module avail cray-python ] != ""} {
    puts stderr "+----------------------+"
    puts stderr "Auto-loading cray-python"
    puts stderr "+----------------------+"
    module load cray-python
}

set gccv [ exec gcc -dumpversion | cut -f1 -d. ]
set nogppf [ catch { exec which g++ } ]
if { $gccv < 9 }  {
    puts stderr "WARNING: gcc version is too old to build Dragon"
}

if { $nogppf == 1 } {
    puts stderr "WARNING: g++ is not installed and Dragon will not build"
}

setenv DRAGON_INCLUDE_DIR $env(DRAGON_BASE_DIR)/include
setenv DRAGON_LIB_DIR $env(DRAGON_BASE_DIR)/lib
setenv DRAGON_BUILD_NTHREADS 6

prepend-path PATH $env(DRAGON_BASE_DIR)/bin
prepend-path LD_LIBRARY_PATH $env(DRAGON_LIB_DIR)
prepend-path PYTHONPATH $env(DRAGON_BASE_DIR)

# Aliases for entry points (convenience for dev env)
set-alias dragon "python3 -m dragon.cli dragon"
set-alias dragon-backend "python3 -m dragon.cli dragon-backend"
set-alias dragon-localservices "python3 -m dragon.cli dragon-localservices"
set-alias dragon-globalservices "python3 -m dragon.cli dragon-globalservices"
set-alias dragon-tcp "python3 -m dragon.cli dragon-tcp"
set-alias dragon-hsta-if "python3 -m dragon.cli dragon-hsta-if"

proc ModulesHelp { } {
   puts stderr "This modulefile sets up your environment to"
   puts stderr "build and use Dragon for development. "
   puts stderr ""
}

module-whatis "dragon-dev - Dragon development environment"
