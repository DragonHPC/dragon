/*
  Copyright 2020, 2022 Hewlett Packard Enterprise Development LP
*/
#ifndef DRAGON_RETURN_CODES
#define DRAGON_RETURN_CODES

#ifdef __cplusplus
extern "C" {
#endif

/* error types */
typedef enum dragonError_st {
    DRAGON_SUCCESS = 0,
    DRAGON_INVALID_ARGUMENT,
    DRAGON_INVALID_STATE,
    DRAGON_INVALID_VALUE,
    DRAGON_INVALID_OPERATION,
    DRAGON_INVALID_MESSAGE,
    DRAGON_NOT_IMPLEMENTED,
    DRAGON_USER_CODE_ERROR,
    DRAGON_FAILURE,
    DRAGON_TIMEOUT,
    DRAGON_EAGAIN,
    DRAGON_INTERNAL_MALLOC_FAIL,
    DRAGON_NOT_FOUND,
    DRAGON_INVALID_LOCK_KIND,
    DRAGON_INVALID_SYNC_KIND,
    DRAGON_EOT,
    DRAGON_OUT_OF_SPACE,
    DRAGON_KEY_NOT_FOUND,
    DRAGON_NO_MORE_KEYS,
    DRAGON_CHANNEL_MEMORY_POOL_NONLOCAL,
    DRAGON_CHANNEL_BUFFER_ERROR,
    DRAGON_CHANNEL_CAPACITY_BELOW_REQUIRED_MINIMUM,
    DRAGON_CHANNEL_BLOCKSIZE_BELOW_REQUIRED_MINIMUM,
    DRAGON_CHANNEL_BLOCKSIZE_OVER_ALLOWED_MAXIMUM,
    DRAGON_CHANNEL_INVALID_FC_TYPE,
    DRAGON_CHANNEL_EMPTY,
    DRAGON_CHANNEL_FULL,
    DRAGON_CHANNEL_NO_GATEWAYS,
    DRAGON_CHANNEL_INVALID_GATEWAY,
    DRAGON_CHANNEL_GATEWAY_ALREADY_REGISTERED,
    DRAGON_CHANNEL_GATEWAY_NOT_REGISTERED,
    DRAGON_CHANNEL_GATEWAY_TRANSPORT_WAIT_TIMEOUT,
    DRAGON_CHANNEL_EVENT_CAPACITY_EXCEEDED,
    DRAGON_CHANNEL_SEND_NOT_OPENED,
    DRAGON_CHANNEL_SEND_ALREADY_OPENED,
    DRAGON_CHANNEL_SEND_MESSAGE_MEMORY_NULL,
    DRAGON_CHANNEL_SEND_INVALID_DESTINATION_MEMORY,
    DRAGON_CHANNEL_RECV_INVALID_CALL,
    DRAGON_CHANNEL_RECV_NOT_OPENED,
    DRAGON_CHANNEL_RECV_ALREADY_OPENED,
    DRAGON_CHANNEL_RECV_INVALID_DESTINATION_MEMORY,
    DRAGON_CHANNEL_RECV_INVALID_SERIALIZED_MSG,
    DRAGON_CHANNEL_OPERATION_UNSUPPORTED_REMOTELY,
    DRAGON_BITSET_BOUNDS_ERROR,
    DRAGON_BITSET_NULL_POINTER,
    DRAGON_BITSET_ITERATION_COMPLETE,
    DRAGON_HASHTABLE_KEY_SIZE_ERROR,
    DRAGON_HASHTABLE_VALUE_SIZE_ERROR,
    DRAGON_HASHTABLE_FULL,
    DRAGON_HASHTABLE_DUPLICATE_KEY,
    DRAGON_HASHTABLE_KEY_NOT_FOUND,
    DRAGON_HASHTABLE_NULL_POINTER,
    DRAGON_HASHTABLE_TOO_BIG,
    DRAGON_HASHTABLE_ITERATION_COMPLETE,
    DRAGON_BLOCKS_ITERATION_COMPLETE,
    DRAGON_DYNHEAP_REQUESTED_SIZE_TOO_LARGE,
    DRAGON_DYNHEAP_REQUESTED_SIZE_NOT_AVAILABLE,
    DRAGON_DYNHEAP_MAX_BLOCK_SIZE_TOO_LARGE,
    DRAGON_DYNHEAP_MIN_BLOCK_SIZE_TOO_SMALL,
    DRAGON_DYNHEAP_INVALID_HEAP,
    DRAGON_DYNHEAP_INVALID_POINTER,
    DRAGON_DYNHEAP_DESTROY_BY_NON_OWNER,
    DRAGON_DYNHEAP_DETACH_BY_OWNER,
    DRAGON_DYNHEAP_INCORRECT_MEMORY_ALIGNMENT,
    DRAGON_DYNHEAP_BAD_ALIGNMENT_REQUEST,
    DRAGON_DYNHEAP_OUT_OF_BOUNDS_INTERNAL_FAILURE,
    DRAGON_MEMORY_ILLEGAL_MEMTYPE,
    DRAGON_MEMORY_OPERATION_ATTEMPT_ON_NONLOCAL_POOL,
    DRAGON_MEMORY_ERRNO,
    DRAGON_MEMORY_FILENAME_ERROR,
    DRAGON_MEMORY_POOL_FULL,
    DRAGON_DDICT_CHECKPOINT_RETIRED,
    DRAGON_DDICT_FUTURE_CHECKPOINT,
    DRAGON_LOCK_NOT_INITD,
    DRAGON_LOCK_ALREADY_INITD,
    DRAGON_LOCK_PTHREAD_MUTEX_INIT,
    DRAGON_LOCK_PTHREAD_MUTEX_DESTROY,
    DRAGON_LOCK_PTHREAD_MUTEX_LOCK,
    DRAGON_LOCK_PTHREAD_MUTEX_UNLOCK,
    DRAGON_MAP_KEY_NOT_FOUND,
    DRAGON_PRIORITY_HEAP_INVALID_ARGUMENT,
    DRAGON_PRIORITY_HEAP_INVALID_BASE,
    DRAGON_PRIORITY_HEAP_INVALID_PRIORITY,
    DRAGON_PRIORITY_HEAP_ALREADY_INITD,
    DRAGON_PRIORITY_HEAP_FULL,
    DRAGON_PRIORITY_HEAP_EMPTY,
    DRAGON_PMSGQUEUE_UNSPECIFIED_ERROR,
    DRAGON_PMSGQUEUE_SEND_TO_RECVQ,
    DRAGON_PMSGQUEUE_RECV_FROM_SENDQ,
    DRAGON_PMSGQUEUE_NOT_OPEN,
    DRAGON_PMSGQUEUE_EXCEEDS_MAX_MSG_SIZE,
    DRAGON_PMSGQUEUE_CANNOT_SEND,
    DRAGON_PMSGQUEUE_CANNOT_RECV,
    DRAGON_PMSGQUEUE_INVALID_NAME,
    DRAGON_PMSGQUEUE_PERMISSION_VIOLATION,
    DRAGON_PMSGQUEUE_NO_ERR_MSG_AVAILABLE,
    DRAGON_PMSGQUEUE_MQUEUE_CONFIG_ERROR,
    DRAGON_PMSGQUEUE_CLOSE_MUST_BE_CALLED_FIRST,
    DRAGON_BCAST_FUTEX_CALL_ERROR,
    DRAGON_BCAST_NO_WAITERS,
    DRAGON_BCAST_NO_WAITERS_NON_CRITICAL,
    DRAGON_BCAST_INSUFFICIENT_WAITERS,
    DRAGON_BCAST_NOT_SERIALIZABLE,
    DRAGON_BCAST_CALLBACK_ERROR,
    DRAGON_BCAST_SIGNAL_ERROR,
    DRAGON_BCAST_HANDLE_ERROR,
    DRAGON_LOGGING_LOW_PRIORITY_MSG,
    DRAGON_BARRIER_BROKEN,
    DRAGON_BARRIER_WAIT_TRY_AGAIN,
    DRAGON_BARRIER_READY_TO_RELEASE,
    DRAGON_OBJECT_DESTROYED,
    DRAGON_BAD_RETURN_CODE // This must remain the last return code so the dragon_get_rc_string works correctly.
} dragonError_t;

typedef dragonError_t dragonChannelError_t;

const char*
dragon_get_rc_string(const dragonError_t rc);

char * dragon_getlasterrstr();

#ifdef __cplusplus
}
#endif

#endif
