' machine for the Dragon native Pool() implementation


@startuml
skinparam componentStyle uml2
skinparam shadowing false
skinparam monochrome true

' skinparam linetype ortho
'skinparam linetype polyline
' skinparam nodesep 10
' skinparam ranksep 20

(*) --> ===B1===
(*) --> Consumer
===B1=== --> "Producer 1"
===B1=== --> "Producer 2"
"Producer 1" --> "MPI Applications" as mpi1
"Producer 1" --> "Parser" as parser1
"Producer 2" --> "MPI Applications" as mpi2
"Producer 2" --> "Parser" as parser2
"Producer 1" -[hidden]r-> "Producer 2"
mpi1 ..>[stdout of\nhead process] "Parser" as parser1
mpi2 ..>[stdout of\nhead process] "Parser" as parser2
parser1 ..>[Put parsed results\ninto shared queue] Consumer
parser2 ..>[Put parsed results\ninto shared queue] Consumer
parser1 -[hidden]d-> ===B2===
parser2 -[hidden]d-> ===B2===
"Producer 1" --> ===B2===
"Producer 2" --> ===B2===
===B1=== -[hidden]-> ===B2===
===B2=== --> Consumer
Consumer -d-> (*)

@enduml