@startuml
skinparam componentStyle rectangle
skinparam componentStyle uml2
skinparam shadowing false
skinparam monochrome true

' skinparam linetype ortho
skinparam linetype polyline
' skinparam nodesep 10
' skinparam ranksep 20


package "Python Multiprocessing" as MP {
    [Context]
    [Managers]
    together {
        [Pool]
        [Queue]
        [Process]
        [Synchronize]
        [Connection]
    }
    [Spawn]
    [SharedCtypes]
    ' [SharedMemory]
    [Reduction]
    [Heap]
    [Popen]
    [Forkserver]
    [ResourceTracker]
    [ResourceSharer]
    ' [Util]

    interface pool_api
    interface queue_api
    interface process_api
    interface manager_api
    ' interface shared_mem_api
    interface synchronize_api
    interface connection_api
    interface context_api
    interface reduction_api
    interface spawn_api
    interface heap_api
    interface popen_api
    interface forkserver_api
    interface resource_tracker_api
    interface resource_sharer_api
    ' interface logger_api
    interface shared_ctypes_api

    Process <-u-> process_api
    Queue <-u-> queue_api
    Connection <-u-> connection_api
    Synchronize <-u-> synchronize_api
    SharedCtypes <-u-> shared_ctypes_api
    Managers <-u-> manager_api
    Pool <-u-> pool_api
    Context <-u-> context_api
    Popen <-u-> popen_api
    Reduction <-u-> reduction_api
    ResourceSharer <-u-> resource_sharer_api
    ResourceTracker <-u-> resource_tracker_api
    Forkserver <-u-> forkserver_api
    ' Util <-u-> logger_api
    Spawn <-u-> spawn_api
    Heap <-u-> heap_api
    ' SharedMemory <-u-> shared_mem_api

    ' explicit import
    Connection --> resource_sharer_api
    Connection --> reduction_api

    Context --> process_api
    Context --> reduction_api
    Context --> connection_api
    Context --> queue_api
    Context --> synchronize_api
    Context --> shared_ctypes_api
    Context --> manager_api
    Context --> pool_api
    Context --> spawn_api
    ' Context --> logger_api
    Context --> forkserver_api
    Context --> popen_api

    Forkserver --> resource_tracker_api
    Forkserver --> connection_api
    Forkserver --> spawn_api
    Forkserver --> process_api
    Forkserver --> reduction_api
        
    Managers --> synchronize_api
    Managers --> queue_api
    Managers --> shared_ctypes_api
    ' Managers --> shared_mem_api
    Managers --> resource_tracker_api
    Managers --> connection_api
    Managers --> process_api
    Managers --> pool_api

    Pool --> process_api
    Pool --> connection_api
    Pool --> queue_api

    Popen --> resource_tracker_api
    Popen --> spawn_api

    Process --> popen_api
    Process --> connection_api

    Queue --> connection_api
    Queue --> synchronize_api

    Reduction --> resource_sharer_api
    Reduction --> resource_tracker_api
    Reduction --> connection_api

    ResourceSharer --> connection_api

    ResourceTracker --> spawn_api

    SharedCtypes --> heap_api
    SharedCtypes --> synchronize_api

    ' SharedMemory --> resource_tracker_api

    Spawn --> resource_tracker_api
    Spawn --> process_api

    Synchronize --> resource_tracker_api
    Synchronize --> heap_api
    Synchronize --> process_api

    ' Util --> resource_tracker_api
    ' Util --> process_api


}

' interface "Multiprocessing API" as mp_api

' package "Adapters" {
'     [Multiprocessing] as MPA
'     [Global System Services] as GSS
'     [uDragon] as UDA

'     interface "Dragon Python API" as dragon_adapter_api
'     interface "Dragon Global System Services API" as gss_adapter_api
'     interface "Dragon Multiprocessing Adapter API" as mpa_adapter_api

'     MPA <-u-> mpa_adapter_api
'     GSS <-u-> gss_adapter_api
'     UDA <-u-> dragon_adapter_api
' }

' package "Dragon Native" as DRAGON {

'     [Launcher] as LA
'     [Shepherd] as SH
'     [Global Services] as GS

'     interface gs_messages_api
'     interface sh_messages_api
'     interface la_messages_api

'     LA <-u-> la_messages_api
'     GS <-u-> gs_messages_api
'     SH <-u-> sh_messages_api
' }

' GSS --> gs_messages_api
' UDA --> sh_messages_api
' UDA --> la_messages_api
' UDA --> gs_messages_api

' implicit object export
mp_api -d-> context_api






@enduml