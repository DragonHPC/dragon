8 11
begin components
user "User Code"
gateway "Gateway Channel"
gmonitor "Gateway Monitor Thread"
hostch "Routing Channel"
hmonitor "Host Monitor Thread"
outsocket "Outgoing Socket to Remote Host"
lmonitor "Local Socket Monitor"
insocket "Incoming Socket from Remote Host"
remotehostmonitor "Remote Host Monitor Thread"
remotehostch "Remote Routing Channel"
rmonitor "Remote Socket Monitor Thread"
ackth "Receive Thread"
remotech "Remote Channel"
end;
ltext@ user "User initiates a Channel Attach";
ltext@ user "Determines that channel is remote";
ltext@ user "Finds Gateway CD in Env Var";
ltext@ user "Attaches to Gateway";
;
user gateway "Call Gateway Attach";
;
gateway user "Return";
;
ltext@ user "User initiates a recv";
ltext@ user "Call Channel Recv";
ltext@ user "Determines the channel is not local";
ltext@ user "Gets gateway channel from handle";
;
ltext@ user "Send ChACKReq msg w/Deposited as Recv Request"
user gateway "";
;
;
gateway user "Return with token";
;
;
gateway gmonitor "Recv ChACKReq msg";
ltext@ gmonitor "Pull Host ID from ChACKReq";
ltext@ gmonitor "Use Host ID to IP Addr Map to find correct Routing Channel";
ltext@ gmonitor "Build TSRemoteRecv msg from ACK msg and gateway c_uid";
;
gmonitor hostch "Send TSRemoteRecv Msg";
hostch hmonitor "Receive TSRemoteRecv Msg";
ltext@ user "User polls for ACK"
hmonitor outsocket "Send TSRemoteRecv Msg";
outsocket rmonitor "Receive TSRemoteRecv Msg";
;
ctext@ rmonitor "If not attached to channel, attach";
ctext@ rmonitor "Handoff to Recv Thread";
;
rmonitor ackth "TSRemoteRecv msg";
;
ctext@ ackth "Do Channel Recv";
ctext@ ackth "Call Recv";
;
ackth remotech "Call Channel Recv";
;
ctext@ remotech "Possible Wait";
;
remotech ackth "Return";
;
ctext@ ackth "Build TSRemoteRecvACK msg";
;
ackth remotehostch "TSRemoteRecvACK msg";
remotehostch remotehostmonitor "TSRemoteRecvACK msg";
remotehostmonitor insocket "TSRemoteRecvACK msg";
insocket lmonitor "TSRemoteRecvACK msg";
;
ctext@ lmonitor "Deposit the message";
ctext@ lmonitor "Place serialized memory descriptor in Original ACK Msg";
ctext@ lmonitor "User has access in shared mem";
ctext@ lmonitor "Call the channel_ack function";
;
lmonitor gateway "ACK";
;
ltext@ user "The check of the ACK token returns success";
