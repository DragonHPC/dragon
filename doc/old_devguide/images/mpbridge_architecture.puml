@startuml

' title "Dragon MPBridge Architecture"

skinparam componentStyle uml2
skinparam shadowing false
skinparam monochrome true

skinparam linetype ortho
' skinparam linetype polyline
' skinparam nodesep 80
skinparam ranksep 80

interface "Python Multiprocessing API" as mp_api
[Python Multiprocessing] as MP

MP -u-> mp_api

component "dragon.mpbridge (Python)" as mpbridge {

    portin "Context API" as ctx_api
    portin "CTypes API" as ctypes_api
    portin "                  Shared Memory API" as shm_api

    [DragonContext] as ctx
    [DragonValue, DragonArray, \nDragonRawValue,\nDragonRawArray] as AV
    [DragonSharedMemory, \nDragonShareableList] as SML

    ' together {
        [Process, Popen] as PROC
        [DragonLock, DragonRLock, \nDragonCondition, DragonEvent, \nDragonSemaphore, DragonBarrier, \nDragonBoundedSemaphore] as L
        [DragonPipe, \nDragonListener, DragonClient] as PLC
        [DragonQueue, \nDragonJoinableQueue, \nDragonSimpleQueue] as Q 
        [log_to_stderr,\nget_logger] as FUNC
    ' }

    [DragonPool] as PO
    [DragonSyncManager] as MAN

    AV <-u- ctypes_api
    SML <-u- shm_api

    ctx -d-> PLC
    ctx -d-> MAN
    ctx -d-> L
    ctx -d-> Q
    ctx -d-> PO
    ctx -d-> FUNC
    ctx -d-> PROC
    ctx -u-> ctx_api
}

component "dragon.native (Python)" as DN {


    portin "Semaphore API" as dsem_api
    portin "Lock API" as dlock_api
    portin "Barrier API" as dbar_api
    portin "Event API" as dev_api
    portin "Pipe API" as dpipe_api
    portin "KeyValue API" as ddict_api

    portin "Queue API" as dqueue_api
    portin "Logging API" as dlog_api
    portin "Machine API" as dmach_api

    portin "Process API" as dproc_api 

    [Process] as DPROC

    together {
        [Semaphore] as SEM
        [Lock] as LCK
        [Barrier] as DBAR
        [Event] as DEV
    }

    [Pipe] as DPIPE
    [Distributed Dict] as DDICT
    [PoolWorkers] as DPWORK
    
    together {
        [Queue] as DQ
        [Machine] as DMACH
        [Logging] as DLOG
    }


    DPROC <-u- dproc_api
    SEM <-u- dsem_api
    LCK <-u- dlock_api
    DBAR <-u- dbar_api
    DEV <-u- dev_api
    DQ <-u- dqueue_api
    DPIPE <-u- dpipe_api
    DMACH <-u- dmach_api
    DLOG <-u- dlog_api
    DDICT <-u- ddict_api
    DDICT --> DPWORK

}

L --d-> dsem_api
L --d-> dlock_api
L --d-> dbar_api
L --d-> dev_api
Q --d-> dqueue_api
PLC -d-> dpipe_api
ctx -d-> dmach_api
PROC -d-> dproc_api


MP ---> ctx_api
MP ---> ctypes_api
MP ---> shm_api

'in case we want to hide components
hide $hidden
@enduml