
@startuml

' title "Dragon GS Client Architecture"

skinparam componentStyle uml2
skinparam shadowing false
skinparam monochrome true

skinparam linetype ortho
' skinparam linetype polyline

' skinparam nodesep 60
' skinparam ranksep 60


component "Dragon Client API (Python)" as DG {
    
    portin "Channel API" as dgchan_api
    portin "Process API" as dgproc_api
    portin "Setup API" as dgsetup_api
    portin "            Memory API" as dgpool_api
    portin "Node API              " as dgnode_api
    portout "Messages & Descriptors" as dg_msg

    [Channel] as DGCHAN
    [Process] as DGPROC
    [Pool] as DGPOOL
    [Setup] as DGSETUP
    [Infrastructure Request] as DGREQ
    [Node] as DGNODE

    DGNODE <--u-- dgnode_api
    DGCHAN <-u- dgchan_api
    DGPROC <-u- dgproc_api
    DGPOOL <-u- dgpool_api
    DGSETUP <-u- dgsetup_api

    DGCHAN --> DGREQ
    DGNODE --> DGREQ
    DGPROC --> DGREQ
    DGPOOL --> DGREQ
    DGPROC --> DGCHAN

    DGCHAN ---> dg_msg
    DGPOOL ---> dg_msg
    DGPROC ---> dg_msg
    DGNODE --->dg_msg

}


[Global Services] as GS 
[Local Services] as LS
[Launcher Backend] as LB 
[Transport Agent] as TA 


component "Dragon Infrastructure API (C,Cython,Python)" as DINFRA {

    portin "Infrastructure API" as inf_api
    
    [Connection] as DCONN
    [Messages] as IMSG
    [Facts] as IFACTS
    [Parameters] as IPARAM
    [Util] as IUTIL
    [Infrastructure Descriptors] as IDESC
    [Logging] as ILOG

    IMSG <-- inf_api
    IUTIL <-- inf_api
    IDESC <-- inf_api
    IFACTS <-- inf_api
    IPARAM <-- inf_api
    DCONN <-- inf_api
    ILOG <-- inf_api

}

' dgsetup_api <-- GS
DGREQ <---> GS
GS <--> inf_api
LS <--> inf_api
TA <--> inf_api
LB <--> inf_api
dg_msg --> inf_api


'in case we want to hide components
hide $hidden
@enduml